name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install

    - name: Run tests
      run: pnpm test

    - name: Build
      run: pnpm build

    - name: Deploy to Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        # SSH 키 설정
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Known hosts 설정
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
        
        # 배포 디렉토리 생성
        ssh -i ~/.ssh/deploy_key $SERVER_USER@$SERVER_IP "mkdir -p ~/solo-nestjs-api"
        
        # 파일 전송
        scp -i ~/.ssh/deploy_key -r dist package.json pnpm-lock.yaml scripts $SERVER_USER@$SERVER_IP:~/solo-nestjs-api/
        
        # 배포 스크립트 실행
        ssh -i ~/.ssh/deploy_key $SERVER_USER@$SERVER_IP "cd ~/solo-nestjs-api && chmod +x scripts/deploy.sh && ./scripts/deploy.sh"

    - name: Send Slack Notification
      if: always()
      uses: 8398a7/action-slack@v3
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,took
        text: |
          ${{ job.status == 'success' && '🚀 배포가 성공적으로 완료되었습니다!' || '❌ 배포 중 문제가 발생했습니다.' }}
